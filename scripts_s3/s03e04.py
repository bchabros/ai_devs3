from loguru import loggerfrom src.s_03.e_04 import Config, Agent, send_reportdef main():    logger.info("Starting main execution...")    try:        # Validate configuration        Config.validate_config()        agent = Agent()        history = None        solution_found = False        max_iterations = 20        iteration = 0        while not solution_found and iteration < max_iterations:            logger.info(f"Starting iteration {iteration + 1}/{max_iterations}")            history, solution_found = agent.process_step(history)            if history:                # Log the reasoning for this iteration                last_step = history[-1]                logger.info(                    f"Iteration {iteration + 1} reasoning: {last_step.get('reasoning', 'No reasoning provided')}")            iteration += 1            final_city = agent.get_final_city()            if final_city:                logger.success(f"Solution found! Final city: {final_city}")                result = send_report(final_city)                logger.success(f"Report sent successfully: {result}")            else:                logger.warning(f"No solution found after {iteration} iterations")    except Exception as e:        logger.error(f"Fatal error in main execution: {str(e)}", exc_info=True)        raise    logger.info("Main execution completed")if __name__ == "__main__":    main()