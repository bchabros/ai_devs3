import osfrom flask import Flask, request, jsonifyfrom dotenv import load_dotenvfrom openai import OpenAIfrom loguru import loggerfrom src.prompt.s04e04 import SYSTEM_PROMPTload_dotenv()app = Flask(__name__)client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))@app.route('/drone', methods=['POST'])def process_instruction():    try:        data = request.get_json()        logger.info(f"Received instruction: {data}")        if not data or 'instruction' not in data:            logger.error("Missing instruction in request")            return jsonify({'error': 'Missing instruction'}), 400        logger.info(f"Sending to OpenAI: {data['instruction']}")        completion = client.chat.completions.create(            model="gpt-4o",            messages=[                {"role": "system", "content": SYSTEM_PROMPT},                {"role": "user", "content": f"Instrukcja lotu: {data['instruction']}"}            ],            temperature=0        )        raw_response = completion.choices[0].message.content        description = raw_response.strip().lower()        logger.info(f"Raw LLM response: {raw_response}")        logger.info(f"Processed description: {description}")        response = {            "description": description,            "debug_info": {                "instruction": data['instruction'],                "raw_response": raw_response            }        }        logger.info(f"Sending response: {response}")        return jsonify(response)    except Exception as e:        logger.error(f"Error processing request: {str(e)}", exc_info=True)        return jsonify({'error': str(e)}), 500if __name__ == '__main__':    app.run(host='0.0.0.0', port=3000)# after run app in terminal ngrok http 3000# then paste https in answer# import os# from dotenv import load_dotenv# from src.send_task import send## load_dotenv()## apikey = os.getenv("API_KEY")# endpoint = f'{os.getenv("CENTRALA_URL")}report'## res = send(#     url=endpoint,#     apikey=apikey,#     answer="{output_from ngrok}/drone",#     task="webhook")# print(res)